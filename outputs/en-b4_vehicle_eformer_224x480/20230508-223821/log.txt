[05/08 22:38:21] cvmatrix INFO: Rank of current process: 0. World size: 1
[05/08 22:38:21] cvmatrix INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]
numpy                   1.24.3
detectron2              failed to import
detectron2._C           not built correctly: No module named 'detectron2'
Compiler ($CXX)         c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
CUDA compiler           Build cuda_11.6.r11.6/compiler.31057947_0
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.12.0+cu116 @/home/gh/miniconda3/envs/cadet3d/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA RTX A4000 (arch=8.6)
Driver version          528.89
CUDA_HOME               /usr/local/cuda-11.6
Pillow                  9.5.0
torchvision             0.13.0+cu116 @/home/gh/miniconda3/envs/cadet3d/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  --------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.6
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[05/08 22:38:21] cvmatrix INFO: Command line arguments: Namespace(config_file='configs/cross_view_transformer/en-b4_vehicle_eformer_224x480.py', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=None, resume=False)
[05/08 22:38:21] cvmatrix INFO: Contents of args.config_file=configs/cross_view_transformer/en-b4_vehicle_eformer_224x480.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15m.[39m[38;5;15m.[39m[38;5;15mcommon[39m[38;5;15m.[39m[38;5;15msolver[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15msolver[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15m.[39m[38;5;15m.[39m[38;5;15mcommon[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m.[39m[38;5;15mnuscenes[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mdatasets[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15m.[39m[38;5;15m.[39m[38;5;15mcommon[39m[38;5;15m.[39m[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mdataloader[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15m.[39m[38;5;15m.[39m[38;5;15mcommon[39m[38;5;15m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mtrain[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mtest[39m

[38;5;15mimage_height_[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m224[39m
[38;5;15mimage_width_[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m480[39m
[38;5;15mtop_crop_[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m46[39m
[38;5;15mdim_[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15mbev_[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mbev_height[39m[38;5;197m=[39m[38;5;141m200[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mbev_width[39m[38;5;197m=[39m[38;5;141m200[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mh_meters[39m[38;5;197m=[39m[38;5;141m100.0[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mw_meters[39m[38;5;197m=[39m[38;5;141m100.0[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15moffset[39m[38;5;197m=[39m[38;5;141m0.0[39m
[38;5;15m)[39m
[38;5;15mblocks_[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15m[[39m[38;5;141m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m128[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m64[39m[38;5;15m][39m
[38;5;15mlabel_indices_[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;141m4[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m5[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m6[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m7[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m8[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m10[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m11[39m[38;5;15m][39m[38;5;15m][39m


[38;5;15mmodel[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mtype[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186mCrossViewTransformerExp[39m[38;5;186m"[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mbev[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mdim_last[39m[38;5;197m=[39m[38;5;141m128[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15moutputs[39m[38;5;197m=[39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mbev[39m[38;5;197m=[39m[38;5;15m[[39m[38;5;141m0[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m1[39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mcenter[39m[38;5;197m=[39m[38;5;15m[[39m[38;5;141m1[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m2[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15minput_size[39m[38;5;197m=[39m[38;5;15m[[39m[38;5;15mimage_height_[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mimage_width_[39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mbackbone[39m[38;5;197m=[39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mtype[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186mEfficientNetExtractor[39m[38;5;186m"[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mmodel_name[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186mefficientnet-b4[39m[38;5;186m"[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15moutput_layers[39m[38;5;197m=[39m[38;5;15m[[39m[38;5;186m'[39m[38;5;186mreduction_3[39m[38;5;186m'[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mreduction_4[39m[38;5;186m'[39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mtransformer[39m[38;5;197m=[39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mtype[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186mEfficientFormer[39m[38;5;186m"[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mdim[39m[38;5;197m=[39m[38;5;15mdim_[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mscale[39m[38;5;197m=[39m[38;5;141m1.0[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mmiddle[39m[38;5;197m=[39m[38;5;15m[[39m[38;5;141m2[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m2[39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mcross_view[39m[38;5;197m=[39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mheads[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mdim_head[39m[38;5;197m=[39m[38;5;141m64[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mqkv_bias[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mskip[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mno_image_features[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mimage_height[39m[38;5;197m=[39m[38;5;15mimage_height_[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mimage_width[39m[38;5;197m=[39m[38;5;15mimage_width_[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mbev_embedding[39m[38;5;197m=[39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15msigma[39m[38;5;197m=[39m[38;5;141m1.0[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;197m*[39m[38;5;197m*[39m[38;5;15mbev_[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mblocks[39m[38;5;197m=[39m[38;5;15mblocks_[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mfeats_shapes[39m[38;5;197m=[39m[38;5;81mNone[39m
[38;5;15m    [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mhead[39m[38;5;197m=[39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mtype[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186mCrossViewTransformerHead[39m[38;5;186m"[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mdim[39m[38;5;197m=[39m[38;5;15mdim_[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mblocks[39m[38;5;197m=[39m[38;5;15mblocks_[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mresidual[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mfactor[39m[38;5;197m=[39m[38;5;141m2[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlosses[39m[38;5;197m=[39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mbev_loss[39m[38;5;197m=[39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mtype[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186mBinarySegmentationLoss[39m[38;5;186m"[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mlabel_indices[39m[38;5;197m=[39m[38;5;15mlabel_indices_[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m2.0[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15malpha[39m[38;5;197m=[39m[38;5;197m-[39m[38;5;141m1.0[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mmin_visibility[39m[38;5;197m=[39m[38;5;141m2[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mweight[39m[38;5;197m=[39m[38;5;141m1.0[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mcenter_loss[39m[38;5;197m=[39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mtype[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186mCenterLoss[39m[38;5;186m"[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mweight[39m[38;5;197m=[39m[38;5;141m0.1[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m2.0[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mmin_visibility[39m[38;5;197m=[39m[38;5;141m2[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m
[38;5;15m    [39m[38;5;15m)[39m
[38;5;15m)[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15muuid[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./outputs[39m[38;5;186m"[39m

[38;5;242m# solver config[39m
[38;5;15msolver[39m[38;5;197m.[39m[38;5;15mmax_iter[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m70325[39m
[38;5;15msolver[39m[38;5;197m.[39m[38;5;15moptimizer[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mtype[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186mAdamW[39m[38;5;186m"[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m4e-3[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mweight_decay[39m[38;5;197m=[39m[38;5;141m1e-7[39m[38;5;15m,[39m
[38;5;15m)[39m
[38;5;15msolver[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mtype[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186mOneCycleLR[39m[38;5;186m"[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mdiv_factor[39m[38;5;197m=[39m[38;5;141m10[39m[38;5;15m,[39m[38;5;15m                                  [39m[38;5;242m# starts at lr / 10[39m
[38;5;15m    [39m[38;5;15mpct_start[39m[38;5;197m=[39m[38;5;141m0.3[39m[38;5;15m,[39m[38;5;15m                                  [39m[38;5;242m# reaches lr at 30% of total steps[39m
[38;5;15m    [39m[38;5;15mfinal_div_factor[39m[38;5;197m=[39m[38;5;141m10[39m[38;5;15m,[39m[38;5;15m                            [39m[38;5;242m# ends at lr / 10 / 10[39m
[38;5;15m    [39m[38;5;15mmax_lr[39m[38;5;197m=[39m[38;5;15msolver[39m[38;5;197m.[39m[38;5;15moptimizer[39m[38;5;197m.[39m[38;5;15mlr[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mtotal_steps[39m[38;5;197m=[39m[38;5;15msolver[39m[38;5;197m.[39m[38;5;15mmax_iter[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mcycle_momentum[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;15mdatasets[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mupdate[39m[38;5;15m([39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/gh/workspace/data/nuscenes/trainval/[39m[38;5;186m"[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnormalize[39m[38;5;197m=[39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mnorm_resnet[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mmean[39m[38;5;197m=[39m[38;5;15m[[39m[38;5;141m0.485[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m0.456[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m0.406[39m[38;5;15m][39m[38;5;15m,[39m[38;5;15m     [39m
[38;5;15m        [39m[38;5;15mstd[39m[38;5;197m=[39m[38;5;15m[[39m[38;5;141m0.229[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m0.224[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m0.225[39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mto_rgb[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15m    [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlabels_root[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/gh/workspace/data/nuscenes/cvt_labels[39m[38;5;186m"[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlabels_dir_name[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186mcvt_labels_nuscenes_v2[39m[38;5;186m"[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mimage[39m[38;5;197m=[39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mh[39m[38;5;197m=[39m[38;5;15mimage_height_[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mw[39m[38;5;197m=[39m[38;5;15mimage_width_[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mtop_crop[39m[38;5;197m=[39m[38;5;15mtop_crop_[39m
[38;5;15m    [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15maugment[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mnone[39m[38;5;186m'[39m
[38;5;15m)[39m[38;5;15m)[39m

[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mbatch_size[39m[38;5;197m=[39m[38;5;141m8[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m6[39m

[38;5;15mevaluator[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15miou[39m[38;5;197m=[39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mtype[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mIoUMetric[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mlabel_indices[39m[38;5;197m=[39m[38;5;15mlabel_indices_[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mmin_visibility[39m[38;5;197m=[39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15miou_with_occlusions[39m[38;5;197m=[39m[38;5;15mdict[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mtype[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mIoUMetric[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15mlabel_indices[39m[38;5;197m=[39m[38;5;15mlabel_indices_[39m
[38;5;15m    [39m[38;5;15m)[39m
[38;5;15m)[39m

[05/08 22:38:21] cvmatrix INFO: Full config saved to ./outputs/en-b4_vehicle_eformer_224x480/20230508-223821/config.yaml
[05/08 22:38:21] d2.utils.env INFO: Using a generated random seed 21694619
[05/08 22:38:22] d2.engine.defaults INFO: Model:
CrossViewTransformerExp(
  (backbone): EfficientNetExtractor(
    (layers): Sequential(
      (0): Sequential(
        (0): Conv2dStaticSamePadding(
          3, 48, kernel_size=(3, 3), stride=(2, 2), bias=False
          (static_padding): ZeroPad2d((0, 1, 0, 1))
        )
        (1): BatchNorm2d(48, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
        (2): SiLU()
      )
      (1): SequentialWithArgs(
        (0): MBConvBlock(
          (_depthwise_conv): Conv2dStaticSamePadding(
            48, 48, kernel_size=(3, 3), stride=[1, 1], groups=48, bias=False
            (static_padding): ZeroPad2d((1, 1, 1, 1))
          )
          (_bn1): BatchNorm2d(48, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            48, 12, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            12, 48, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            48, 24, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): SiLU()
        )
        (1): MBConvBlock(
          (_depthwise_conv): Conv2dStaticSamePadding(
            24, 24, kernel_size=(3, 3), stride=(1, 1), groups=24, bias=False
            (static_padding): ZeroPad2d((1, 1, 1, 1))
          )
          (_bn1): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            24, 6, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            6, 24, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): SiLU()
        )
        (2): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            144, 144, kernel_size=(3, 3), stride=[2, 2], groups=144, bias=False
            (static_padding): ZeroPad2d((0, 1, 0, 1))
          )
          (_bn1): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            144, 6, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            6, 144, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): SiLU()
        )
      )
      (2): SequentialWithArgs(
        (0): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            192, 192, kernel_size=(3, 3), stride=(1, 1), groups=192, bias=False
            (static_padding): ZeroPad2d((1, 1, 1, 1))
          )
          (_bn1): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            192, 8, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            8, 192, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): SiLU()
        )
        (1): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            192, 192, kernel_size=(3, 3), stride=(1, 1), groups=192, bias=False
            (static_padding): ZeroPad2d((1, 1, 1, 1))
          )
          (_bn1): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            192, 8, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            8, 192, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): SiLU()
        )
        (2): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            192, 192, kernel_size=(3, 3), stride=(1, 1), groups=192, bias=False
            (static_padding): ZeroPad2d((1, 1, 1, 1))
          )
          (_bn1): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            192, 8, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            8, 192, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): SiLU()
        )
        (3): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            192, 192, kernel_size=(5, 5), stride=[2, 2], groups=192, bias=False
            (static_padding): ZeroPad2d((2, 2, 2, 2))
          )
          (_bn1): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            192, 8, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            8, 192, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            192, 56, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(56, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): SiLU()
        )
      )
      (3): SequentialWithArgs(
        (0): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(336, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            336, 336, kernel_size=(5, 5), stride=(1, 1), groups=336, bias=False
            (static_padding): ZeroPad2d((2, 2, 2, 2))
          )
          (_bn1): BatchNorm2d(336, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            336, 14, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            14, 336, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(56, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): SiLU()
        )
        (1): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(336, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            336, 336, kernel_size=(5, 5), stride=(1, 1), groups=336, bias=False
            (static_padding): ZeroPad2d((2, 2, 2, 2))
          )
          (_bn1): BatchNorm2d(336, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            336, 14, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            14, 336, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(56, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): SiLU()
        )
        (2): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(336, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            336, 336, kernel_size=(5, 5), stride=(1, 1), groups=336, bias=False
            (static_padding): ZeroPad2d((2, 2, 2, 2))
          )
          (_bn1): BatchNorm2d(336, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            336, 14, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            14, 336, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(56, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): SiLU()
        )
        (3): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(336, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            336, 336, kernel_size=(3, 3), stride=[2, 2], groups=336, bias=False
            (static_padding): ZeroPad2d((0, 1, 0, 1))
          )
          (_bn1): BatchNorm2d(336, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            336, 14, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            14, 336, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            336, 112, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(112, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): SiLU()
        )
      )
    )
  )
  (transformer): EfficientFormer(
    (bev_embedding): BEVEmbedding()
    (cross_views): ModuleList(
      (0): CrossViewAttention(
        (feature_linear): Sequential(
          (0): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU()
          (2): Conv2d(56, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (feature_proj): Sequential(
          (0): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU()
          (2): Conv2d(56, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (bev_embed): Conv2d(2, 128, kernel_size=(1, 1), stride=(1, 1))
        (img_embed): Conv2d(4, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cross_attend): CrossAttention(
          (to_q): Sequential(
            (0): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=128, out_features=256, bias=True)
          )
          (to_k): Sequential(
            (0): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=128, out_features=256, bias=True)
          )
          (to_v): Sequential(
            (0): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=128, out_features=256, bias=True)
          )
          (proj): Linear(in_features=256, out_features=128, bias=True)
          (prenorm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (0): Linear(in_features=128, out_features=256, bias=True)
            (1): GELU(approximate=none)
            (2): Linear(in_features=256, out_features=128, bias=True)
          )
          (postnorm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        )
      )
      (1): CrossViewAttention(
        (feature_linear): Sequential(
          (0): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU()
          (2): Conv2d(112, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (feature_proj): Sequential(
          (0): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU()
          (2): Conv2d(112, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (bev_embed): Conv2d(2, 128, kernel_size=(1, 1), stride=(1, 1))
        (img_embed): Conv2d(4, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cross_attend): CrossAttention(
          (to_q): Sequential(
            (0): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=128, out_features=256, bias=True)
          )
          (to_k): Sequential(
            (0): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=128, out_features=256, bias=True)
          )
          (to_v): Sequential(
            (0): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=128, out_features=256, bias=True)
          )
          (proj): Linear(in_features=256, out_features=128, bias=True)
          (prenorm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (0): Linear(in_features=128, out_features=256, bias=True)
            (1): GELU(approximate=none)
            (2): Linear(in_features=256, out_features=128, bias=True)
          )
          (postnorm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        )
      )
    )
    (layers): ModuleList(
      (0): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): Bottleneck(
          (conv1): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): Bottleneck(
          (conv1): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
  )
  (head): CrossViewTransformerHead(
    (layers): Sequential(
      (0): DecoderBlock(
        (conv): Sequential(
          (0): Upsample(scale_factor=2.0, mode=bilinear)
          (1): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): ReLU(inplace=True)
          (4): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (up): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace=True)
      )
      (1): DecoderBlock(
        (conv): Sequential(
          (0): Upsample(scale_factor=2.0, mode=bilinear)
          (1): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): ReLU(inplace=True)
          (4): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (up): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace=True)
      )
      (2): DecoderBlock(
        (conv): Sequential(
          (0): Upsample(scale_factor=2.0, mode=bilinear)
          (1): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): ReLU(inplace=True)
          (4): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (up): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace=True)
      )
    )
  )
  (to_logits): Sequential(
    (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): Conv2d(128, 2, kernel_size=(1, 1), stride=(1, 1))
  )
)
[05/08 22:38:29] fvcore.common.checkpoint INFO: No checkpoint found. Initializing model from scratch
[05/08 22:38:29] d2.engine.train_loop INFO: Starting training from iteration 0
[05/08 22:38:37] d2.engine.hooks INFO: Overall training speed: 1 iterations in 0:00:00 (0.9233 s / it)
[05/08 22:38:37] d2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[05/08 22:38:37] d2.utils.events INFO:  eta: 14:08:45  iter: 000003  total_loss: 0.2394  bev_loss: 0.2226  center_loss: 0.01678  time: 0.7242  data_time: 0.4945  lr: 0.0004  max_mem: 6765M
